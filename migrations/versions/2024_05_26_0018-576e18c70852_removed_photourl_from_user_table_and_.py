"""Removed photoUrl from user table and added is_coordinator, is_female columns

Revision ID: 576e18c70852
Revises: fc1a2d7b944f
Create Date: 2024-05-26 00:18:52.417515

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '576e18c70852'
down_revision: Union[str, None] = 'fc1a2d7b944f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('comment', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('comment', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('comment', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('comment', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('status', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('status', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('status', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.add_column('user', sa.Column('is_coordinator', sa.Boolean(), server_default='false', nullable=False))
    op.add_column('user', sa.Column('is_female', sa.Boolean(), server_default='false', nullable=False))
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(length=320),
               nullable=False)
    op.alter_column('user', 'hashed_password',
               existing_type=sa.VARCHAR(length=1024),
               nullable=False)
    op.alter_column('user', 'is_working_remotely',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user', 'status_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('user', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('user', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.drop_constraint('user_email_key', 'user', type_='unique')
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.drop_column('user', 'photo_url')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('photo_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.create_unique_constraint('user_email_key', 'user', ['email'])
    op.alter_column('user', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('user', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('user', 'is_verified',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('user', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('user', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('user', 'status_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user', 'is_working_remotely',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('user', 'hashed_password',
               existing_type=sa.VARCHAR(length=1024),
               nullable=True)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(length=320),
               nullable=True)
    op.drop_column('user', 'is_female')
    op.drop_column('user', 'is_coordinator')
    op.alter_column('status', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('status', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('status', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('comment', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('comment', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text("timezone('utc'::text, now())"))
    op.alter_column('comment', 'owner_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('comment', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
